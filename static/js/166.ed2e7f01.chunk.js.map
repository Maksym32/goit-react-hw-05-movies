{"version":3,"file":"static/js/166.ed2e7f01.chunk.js","mappings":"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","sources":["components/APIfetch/APIfetch.js","components/Movies/Movies-styled.js","components/Movies/Movies.js","components/Movies/MoviesList.js"],"sourcesContent":["const URL = 'https://api.themoviedb.org';\nconst API_KEY = '1a277fcd67d620e5e54e2f4f933a05d4';\nconst page = 1;\n\nexport const fetchForADay = () => {\n  return fetch(`${URL}/3/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n    .then(r => r.json())\n    .catch(err => err.message)\n}\n\nexport const fetchSearch = (query) => {\n  return fetch(`${URL}/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`)\n    .then(r => r.json())\n    .catch(err => err.message)\n}\n\nexport const fetchMovieById = (movieId) => {\n  return fetch(`${URL}/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.json())\n    .catch(err => err.message);\n}\nexport const fetchReviews = (movieId) => {\n  return fetch(`${URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.json())\n    .catch(err => err.message);\n}\nexport const fetchCast = (movieId) => {\n  return fetch(`${URL}/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.json())\n    .catch(err => err.message);\n}","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom'\n\nexport const MoviesBox = styled.ul`\n\npadding: 10px;\nmax-width: 800px;\n\n` \nexport const MoviesTitle = styled.h3`\nfont-size: 30px;\nmargin: 0;\npadding-bottom: 20px;\n`\nexport const MoviesItem = styled.li`\ndisplay: flex;\nmargin: 5px 0;\nback\n`\nexport const Link = styled(NavLink)`\n\npadding: 5px;\nwidth: 100%;\nheight: 100%;\ncolor: black;\n\n\n\n`\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: raw;\njustify-content: center;\npadding: 10px;\n`","import { useState, useEffect } from \"react\";\nimport * as movieApi from '../APIfetch/APIfetch';\nimport { useSearchParams } from 'react-router-dom';\nimport toastr from \"toastr\";\nimport MoviesList from \"./MoviesList\";\nimport { Form } from './Movies-styled'\nimport { useForm } from 'react-hook-form';\n\ntoastr.options = {\n    \"progressBar\": true,\n    \"positionClass\": \"toast-top-left\",\n    \"timeOut\": \"3000\",\n    \"extendedTimeOut\": \"1000\",\n}\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState();\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const [searchName, setSearchName] = useState(() => searchParams.get(\"search\") ?? \"\" );\n  const { register, handleSubmit } = useForm();\n\n  useEffect(() => {\n    if (!searchName.trim()) return;\n    movieApi.fetchSearch(searchName)\n      .then(data => {\n        if (!data.results) {\n          toastr.error(data); // ошибка сети\n          return;\n        }\n        if (data.total_results === 0) {\n          toastr.error(\"No results\"); // нет результата\n          setMovies();\n          return;\n        }\n      setMovies(data.results);\n      setSearchParams({ search: searchName });\n  })\n  }, [searchName, setSearchParams]);\n  \n  return (\n    <>\n      <Form onSubmit={handleSubmit(value => setSearchName(value.searchName))}>\n        <label>\n          <input type=\"text\" {...register(\"searchName\")}></input>\n        </label>\n        <button type=\"submit\">Search</button>  \n      </Form>\n      {movies &&\n        <MoviesList\n          title=\"Searched movies\"\n          movies={movies}\n          path={''} />\n      }\n      </>\n  )\n}","import { Link, MoviesBox, MoviesTitle, MoviesItem } from './Movies-styled';\nimport { useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\n\nexport default function MoviesList({ movies, title, path }) {\n    const location = useLocation();\n    return (\n        <MoviesBox>\n            <MoviesTitle>{title}</MoviesTitle>\n            {movies.map(el => (\n                <MoviesItem key={el.id}>\n                    <Link to={`${path}${el.id}`} state={{ from: location }}>{el.title}</Link>\n                </MoviesItem>\n            ))}\n        </MoviesBox>\n    )\n}\nMoviesList.propTypes = {\n    movies: PropTypes.array,\n    tytle: PropTypes.string,\n    path: PropTypes.string\n}"],"names":["URL","API_KEY","fetchForADay","fetch","then","r","json","catch","err","message","fetchSearch","query","fetchMovieById","movieId","fetchReviews","fetchCast","MoviesBox","styled","MoviesTitle","MoviesItem","Link","NavLink","Form","MoviesPage","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","searchName","setSearchName","useForm","register","handleSubmit","useEffect","trim","movieApi","data","results","total_results","toastr","search","onSubmit","value","type","title","path","MoviesList","location","useLocation","map","el","to","id","state","from"],"sourceRoot":""}